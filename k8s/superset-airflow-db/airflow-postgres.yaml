# airflow-postgres.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-postgres
spec:
  ports:
    - port: 5432
  selector:
    app: airflow-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-postgres
  template:
    metadata:
      labels:
        app: airflow-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14
        env:
        - name: POSTGRES_DB
          value: airflow
        - name: POSTGRES_USER
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: airflow-pgdata
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: airflow-pgdata
        persistentVolumeClaim:
          claimName: airflow-postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
      - name: airflow
        image: puckel/docker-airflow:latest
        env:
        - name: LOAD_EX
          value: "y"
        - name: POSTGRES_HOST
          value: airflow-postgres
        - name: POSTGRES_USER
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        - name: POSTGRES_DB
          value: airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: airflow
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
  selector:
    app: airflow
