pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                git(url: 'https://github.com/EduardUsatchev/DevOps.git', branch: 'main')
            }
        }

        stage('Build') {
            steps {
                // Build the Docker image
                sh '''
                cd /var/jenkins_home/workspace/cicd/jenkins/ci-cd
                pwd
                docker build -t app .'''
            }
        }

        stage('Run') {
            steps {
                // Run the Docker container
                sh 'docker run -d -p 5000:5000  --name app app'

                // Ensure services are up
                script {
                    sleep 15 // Adjust the sleep time as necessary
                }
            }
        }
        stage('Test') {
steps {
                script {
                    try {
                        sh 'python test_app.py'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }


         stage('Finalize') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerHub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_ID')]) {
                    sh 'docker login -u $DOCKER_ID -p $DOCKER_PASSWORD'
                    sh 'docker tag app:latest eduardusatchev/app:latest'
                    sh 'docker push eduardusatchev/eduardusatchev:latest'
                }
        }
    }
   }
 }